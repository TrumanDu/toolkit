import{a as E}from"./index-4f173d59.js";import{u as k,i as T}from"./action-cd384d03.js";import{d as C,y as H,z as A,D as B,r as u,A as U,c as f,w as a,f as g,v as r,j as e,B as z,C as c,E as I,T as s}from"./tool-4bde39df.js";import"./modulepreload-polyfill-3cfb730f.js";const F=C({__name:"Encrypt",async setup(D){let p,d;const t=k(([p,d]=H(()=>T({input:c("text"),option:{key:c("hex"),padding:!0,is_cbc:!1,iv:c("hex")},output:I("hex")})),p=await p,d(),p)),m=A(()=>{if(t.current.input.text.isEmpty()||t.current.option.key.text.isEmpty()||t.current.option.is_cbc&&t.current.option.iv.text.isEmpty())return s.empty();if(t.current.input.text.isError())return t.current.input.text;if(t.current.option.key.text.isError())return t.current.option.key.text;if(t.current.option.is_cbc&&t.current.option.iv.text.isError())return t.current.option.iv.text;try{if(!t.current.input.text.isText())throw new Error("input content must text / text file");const i=E.sm4.encrypt(t.current.input.text.toString(),t.current.option.key.text.toHexString(),{padding:t.current.option.padding?"pkcs#5":"none",mode:t.current.option.is_cbc?"cbc":void 0,iv:t.current.option.is_cbc?t.current.option.iv.text.toHexString():void 0});if(i==="")throw new Error("Encrypt Failure");return s.fromHex(i)}catch(i){return s.fromError($error(i))}});return B(()=>m.value,i=>{i.isEmpty()||t.save()},{immediate:!0,deep:!0}),(i,o)=>{const l=u("TextInput"),x=u("Bool"),y=u("HelpTip"),_=u("Align"),v=u("TextOutput"),V=u("HeightResize"),b=U("row");return g(),f(V,{ignore:"",append:[".ctool-page-option"],reduce:10},{default:a(({small:w,large:h})=>[r(_,{direction:"vertical"},{default:a(()=>[r(l,{modelValue:e(t).current.input,"onUpdate:modelValue":o[0]||(o[0]=n=>e(t).current.input=n),height:w,upload:"file"},null,8,["modelValue","height"]),z((g(),f(_,{class:"ctool-page-option"},{default:a(()=>[r(l,{modelValue:e(t).current.option.key,"onUpdate:modelValue":o[1]||(o[1]=n=>e(t).current.option.key=n),"use-input":"Key",allow:["text","hex","base64"]},null,8,["modelValue"]),r(x,{modelValue:e(t).current.option.padding,"onUpdate:modelValue":o[2]||(o[2]=n=>e(t).current.option.padding=n),label:"Padding",border:""},null,8,["modelValue"]),r(x,{modelValue:e(t).current.option.is_cbc,"onUpdate:modelValue":o[3]||(o[3]=n=>e(t).current.option.is_cbc=n),label:"CBC",border:""},null,8,["modelValue"]),r(l,{disabled:!e(t).current.option.is_cbc,modelValue:e(t).current.option.iv,"onUpdate:modelValue":o[4]||(o[4]=n=>e(t).current.option.iv=n),"use-input":"IV",allow:["text","hex","base64"]},null,8,["disabled","modelValue"]),r(y,{link:"https://github.com/JuneAndGreen/sm-crypto"})]),_:1})),[[b,"1-auto-auto-1-auto"]]),r(v,{modelValue:e(t).current.output,"onUpdate:modelValue":o[5]||(o[5]=n=>e(t).current.output=n),allow:["base64","hex"],content:m.value,height:h},null,8,["modelValue","content","height"])]),_:2},1024)]),_:1},8,["append"])}}});export{F as default};
